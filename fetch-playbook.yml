#!/bin/ansible-playbook

- hosts: '{{ hosts | default("all") }}'
  tasks:
    - name: Add the items file by default if not passed as an argument
      set_fact:
        items_file: ./items.yml
      when: items_file is not defined

    - name: Include items from the items file
      include_vars:
        file: '{{ items_file }}'
        name: items

    - name: If the destination is defined ensure that no trailing "/" are in the path
      set_fact:
        destination: "{{ destination if destination[-1] != '/' else destination[:-1] }}"
      when: destination is defined

    - name: Add the destination by default if not passed as an argument or added as an variable in the items file.
      set_fact:
        destination: /home/ansible/backup
      when: destination is not defined

    - name: Pre
      block:
        - name: Check if destination is created
          stat:
            path: '{{ destination }}'
          register: dest_stat

        - name: Create destination if not created
          file:
            path: '{{ destination }}'
            state: directory
            mode: 0775
            group: ansible
            owner: ansible
          when: dest_stat.stat.exists == false
      when: '{{ "control" in group_names }}'

    - name: Listing all the files to be fetched
      set_fact:
        host_items: |
          {% set host_items = [] -%}
          {% for file in items[item] -%}
            {% if file.folder is defined -%}
              {% set dummy = host_items.append('/'.join([file.path if file.path[-1] != '/' else file.path[:-1], file.folder])) -%}
            {%- else -%}
              {% set dummy = host_items.append(file.path if file.path[-1] != '/' else file.path[:-1]) -%}
            {%- endif %}
          {%- endfor %}
          {{ host_items }}
      when: '{{ "_".join(item.split("_")[:-1]) in group_names }}'
      with_items: '{{ items.keys() | list }}'

    - name: Fetching the files each from the corresponding hosts only.
      synchronize:
        src: '{{ item }}'
        dest: '{{ destination }}/{{ inventory_hostname }}/'
        mode: pull
        rsync_path: 'sudo rsync'
      with_items: '{{ host_items }}'
      when: '{{ "control" not in group_names }}'
